#!/bin/bash

case $1 in
'get'|'edit'|'new_dm'|'dms'|'guilds'|'connections')
	[[ ! -z "$2" ]] && TEXT=$2 || read TEXT
	case $1 in
	'get')
		USER=$(echo "$TEXT" | jq -r ".id")
		dapi GET "/users/$USER" "{}" ;;
	'edit')
		echo "$TEXT" | dapi PATCH "/users/@me" ;;
	'new_dm')
		TEXT=$(echo "$TEXT" | jq '.recipient_id = .id' | jq 'del(.id)')
		dapi POST "/users/@me/channels" "$TEXT" ;;
	'dms')
		dapi GET "/users/@me/channels" "{}" ;;
	'guilds')		
		BEFORE=$(echo "$TEXT" | jq -r ".before//empty")
		[ -n $BEFORE ] || BEFORE="before=$BEFORE&"
		AFTER=$(echo "$TEXT" | jq -r ".after//empty")
		[ -n $AFTER ] || AFTER="after=$AFTER&"
		LIMIT=$(echo "$TEXT" | jq -r ".limit//empty")
		[ -n $LIMIT ] || LIMIT="limit=$LIMIT"

		[ -n $BEFORE$AFTER$LIMIT ] || Q='?'
		dapi GET "/users/@me/guilds$Q$BEFORE$AFTER$LIMIT" " " ;;
	'connections')
		dapi GET "/users/@me/connections" "{}" ;;
	esac ;;
*)
	echo "Usage: user {COMMAND} {JSON}" >&2
	echo "Interacts with user endpoints"
	echo ""
	echo "Every command accepts a string of JSON, as stdout or arg"
       	echo "Avaliable commands with their respective JSON keys:"
	echo ""
	echo "get: {id}"
	echo "    id: (snowflake|string) the id of an user, @me for the current user"
	echo ""
	echo "edit: [name] [avatar]"
	echo "    name: (string) your new username"
	echo "    avatar: (uri image) the data of your new avatar"
	echo ""
	echo "new_dm: {id}"
	echo "    id: (snowflake) the id of the recipient"
	echo ""
	echo "dms"
	echo ""
	echo "guilds [before] [after] [limit]"
	echo "    before: (snowflake) get guilds before this guild id"
	echo "    after: (snowflake) get guilds after this guild id"
	echo "    limit: (integer) max number of guilds to return (1-100)"
	echo ""
	echo "connections"
	exit 1 ;;
esac
