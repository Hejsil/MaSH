#!/bin/bash

case $1 in
'get'|'edit'|'new_dm'|'dms'|'guilds'|'connections')
	read -r TEXT
	case $1 in
	'get')
		USER=$(echo "$TEXT" | jq -r ".id")
		echo "{}" | dapi GET "/users/$USER" ;;
	'edit')
		PAYLOAD=$(echo "$TEXT" | filter-args json 'name,avatar')
		echo "$PAYLOAD" | dapi PATCH "/users/@me" ;;
	'new_dm')
		PAYLOAD=$(echo "$TEXT" | filter-args json 'id' | jq -cM '.recipient_id = .id | del(.id)')
		echo "$PAYLOAD" | dapi POST "/users/@me/channels" ;;
	'dms')
		echo "{}" | dapi GET "/users/@me/channels" ;;
	'guilds')		
		QUERY=$(echo "$TEXT" | filter-args query 'before,after,limit')
		echo " " | dapi GET "/users/@me/guilds$QUERY" ;;
	'connections')
		echo "{}" | dapi GET "/users/@me/connections" ;;
	esac ;;
*)
	echo "Usage: user {COMMAND}" >&2
	echo "Interacts with user endpoints"
	echo ""
	echo "Every command accept a string of JSON on STDIN"
       	echo "Avaliable commands with their respective JSON keys:"
	echo ""
	echo "get: {id}"
	echo "    id: (snowflake|string) the id of an user, @me for the current user"
	echo ""
	echo "edit: [name] [avatar]"
	echo "    name: (string) your new username"
	echo "    avatar: (uri image) the data of your new avatar"
	echo ""
	echo "new_dm: {id}"
	echo "    id: (snowflake) the id of the recipient"
	echo ""
	echo "dms"
	echo ""
	echo "guilds [before] [after] [limit]"
	echo "    before: (snowflake) get guilds before this guild id"
	echo "    after: (snowflake) get guilds after this guild id"
	echo "    limit: (integer) max number of guilds to return (1-100)"
	echo ""
	echo "connections"
	exit 1 ;;
esac
