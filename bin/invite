#!/bin/bash

case $1 in
'get'|'new'|'del'|'list_ch'|'list_g')
	read -r TEXT
	case $1 in
	'get')
		INV=$(echo "$TEXT" | jq -r ".code")
		echo " " | dapi GET "/invites/$INV" ;;
	'new')
		CHANNEL=$(echo "$TEXT" | jq -r ".channel")
		PAYLOAD=$(echo "$TEXT" | filter-args json 'max_age,max_uses,temporary,unique')
		echo "$PAYLOAD" | dapi POST "/channels/$CHANNEL/invites" ;;
	'del')
		INV=$(echo "$TEXT" | jq -r ".code")
		echo " " | dapi DELETE "/invites/$INV" ;;
	'list_ch')
		CHANNEL=$(echo "$TEXT" | jq -r ".id")
		echo " " | dapi GET "/channels/$CHANNEL/invites" ;;
	'list_g')
		GUILD=$(echo "$TEXT" | jq -r ".id")
		echo " " | dapi GET "/guilds/$GUILD/invites" ;;
	esac ;;
*)
	echo "Usage: invite {COMMAND}" >&2
	echo "Interacts with invite endpoints"
	echo ""
	echo "Every command accept a string of JSON on STDIN"
       	echo "Avaliable commands with their respective JSON keys:"
	echo ""
	echo "get: {code}"
	echo "    code: (string) the code of the invite"
	echo ""
	echo "new: {channel} [max_age] [max_uses] [temporary] [unique]"
	echo "    channel: (snowflake) the id of the channel"
	echo "    max_age: (integer) seconds for the invite to be valid, 0 for forever (default: 86400)"
	echo "    max_uses: (integer) max number of uses, 0 for unlimited (default: 0)"
	echo "    temporary: (boolean) if the invite only grants temporary membership (default:false)"
	echo "    unique: (boolean) if true, the invite can be used only one time (default: false)"
	echo ""
	echo "del: {code}"
	echo "    code: (string) the code of the invite"
	echo ""
	echo "list_ch: {id}"
	echo "    id: (snowflake) the id of the channel"
	echo ""
	echo "list_g: {id}"
	echo "    id: (snowflake) the id of the guild"
	exit 1 ;;
esac
