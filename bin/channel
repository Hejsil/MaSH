#!/bin/bash

case $1 in
'get'|'new'|'edit'|'del'|'list'|'pos_edit'|'perm_edit'|'perm_delete')
	[[ ! -z "$2" ]] && TEXT=$2 || read TEXT
	case $1 in
	'get')
		CHANNEL=$(echo "$TEXT" | jq -r '.id')
		dapi GET "/channels/$CHANNEL" ;;
	'new')
		GUILD=$(echo "$TEXT" | jq -r '.guild')
		PAYLOAD=$(echo "$TEXT" | jq 'del(.guild)')
		dapi POST "/guilds/$GUILD/channels" "$PAYLOAD" ;;
	'edit')
		CHANNEL=$(echo "$TEXT" | jq -r '.id')
		PAYLOAD=$(echo "$TEXT" | jq 'del(.id)')
		dapi PATCH "/channels/$CHANNEL" "$PAYLOAD" ;;
	'del')
		CHANNEL=$(echo "$TEXT" | jq -r '.id')
		dapi DELETE "/channels/$CH" ;;
	'list')
		GUILD=$(echo "$TEXT" | jq -r '.guild')
		dapi GET "/guilds/$GUILD/channels" ;;
	'pos_edit')
		GUILD=$(echo "$TEXT" | jq -r '.guild')
		PAYLOAD=$(echo "$TEXT" | jq '.data')
		dapi PATCH "/guilds/$GUILD/channels" "$PAYLOAD" ;;
	'perm_edit')
		OW=$(echo "$TEXT" | jq -r '.id')
		CHANNEL=$(echo "$TEXT" | jq -r '.channel')
		PAYLOAD=$(echo "$TEXT" | jq 'del(.id)' | jq 'del(.channel)')
		dapi PUT "/channels/$CHANNEL/permissions/$OW" "$PAYLOAD" ;;
	'perm_delete')
		OW=$(echo "$TEXT" | jq -r '.id')
		CHANNEL=$(echo "$TEXT" | jq -r '.channel')
		dapi DELETE "/channels/$CHANNEL/permissions/$OW" ;;
	esac ;;
*)
	echo "Usage: channel {COMMAND} {JSON}" >&2
	echo "Interacts with channel endpoints"
	echo ""
	echo "Every command accepts a string of JSON, as stdout or arg"
       	echo "Avaliable commands with their respective JSON keys:"
	echo ""
	echo "get: {id}"
	echo "    id: (snowflake) the id of the channel"
	echo ""
	echo "new: {guild} {name} [type] [topic] [bitrate] [user_limit] "
	echo "[rate_limit_per_user} [position] [permission_overwrites]"	
	echo "[parent_id] [nsfw]"
	echo "    guild: (snowflake) the id of the target guild"
	echo "    name: (string) channel name (2-100)"
	echo "    type: (integer) the type of channel"
	echo "    topic: (string) channel topic (0-1024)"
	echo "    bitrate: (integer) the bitrate of the voice channel (voice only)"
	echo "    user_limit: (integer) the user limit of the voice channel (voice only)"
	echo "    rate_limit_per_user: (integer) amount of seconds a user has to wait before "
	echo "        sending another message (0-21600)"
	echo "    position: (integer) sorting position of the channel "
	echo "    permission_overwrites: (array) array of overwrite objects "
	echo "        the channel's permission overwrites"
	echo "    parent_id: (snowflake): id of the parent category for a channel"
	echo "    nsfw: (boolean) whether the channel is nsfw"
	echo ""
	echo "edit: {id} [content|embed]"
	echo "    id: (snowflake) the id of the channel"
	echo "    name: (string): channel name (2-100)"
	echo "    position: (integer) the position of the channel"
	echo "    topic: (string) channel topic (0-1024)"
	echo "    nsfw: (boolean) whether the channel is nsfw"
	echo "    rate_limit_per_user: (integer) amount of seconds a user has to wait before "
        echo "        sending another message (0-21600)"
	echo "    bitrate: (integer) the bitrate of the voice channel; (8000-96000, 128000 VIP) "
	echo "    user_limit: (integer) the user limit of the voice channel (0-99) "
	echo "    permission_overwrites: (array) array of overwrite objects channel or "
	echo "          category-specific permissions "
	echo "    parent_id: (snowflake) id of the new parent category for a channel "
	echo ""
	echo "del: {id}"
	echo "    id: (snowflake) the id of the channel"
	echo ""
	echo "list: {guild}"
	echo "    guild: (snowflake) the id of the guild"
	echo ""	
	echo "pos_edit: {guild} {data}"
	echo "    guild: (snowflake) the id of the target guild"
	echo "    data: (array) an array of (snowflake, integer), containing the channel id"
	echo "		and the position"
	echo ""
	echo "perm_edit: {id} {allow} {deny} {type}"
	echo "    id: (snowflake) the id of the permission overwrite"
	echo "    channel: (snowflake) the id of the channel"
	echo "    allow: (integer) the bitwise value of all allowed permissions"
	echo "    deny: (integer) the bitwise value of all disallowed permissions"
	echo "    type: (string) 'member' for an user or 'role' for a role"
	echo ""
	echo "perm_delete: {id} {channel}"
	echo "    id: (snowflake) the id of the permission overwrite"
	echo "    channel: (snowflake) the id of the channel"
	exit 1 ;;
esac
