#!/bin/bash

prefix(){
	MASH_PREFIX=( $1 )
	export "MASH_PREFIX"
}

dispatch(){
	[ "$(type -t "$2")" == "function" ] && export -f "$2"
	eval "MASH_DISPATCH_$1='$2'"
	export "MASH_DISPATCH_$1"
}

xcommand(){
	[ "$(type -t "$1")" == "function" ] && export -f "$1"
	NAMES=( $2 )
	for NAME in "${NAMES[@]}"; do
		eval "MASH_COMMAND_$NAME='$1'"
		export "MASH_COMMAND_$NAME"
		eval "MASH_COMMAND_${NAME}_CTX='$3'"
		export "MASH_COMMAND_${NAME}_CTX"
	done
}

_parse-commands(){
	CONTENT="$(echo "$1" | grep -oP '(?<="content":").*?(?=",)')"
	if [ -n "$MASH_PREFIX" ]; then
		for TEST_PREFIX in "${MASH_PREFIX[@]}"; do
			if [[ "$CONTENT" == "$TEST_PREFIX"* ]]; then
				PREFIX="$TEST_PREFIX"; break
			fi
		done
	else
		exit
	fi
	[ -z "$PREFIX" ] && exit

	BOT=$(echo "$1" | jq '.author|.bot')
	[ "$BOT" == "true" ] && exit

	CONTENT=${CONTENT#$PREFIX}

	CONTENT=("${CONTENT[@]//\\\"/\"}")
	CONTENT=$(xargs printf '%s\n' <<< "$CONTENT")

	mapfile -t ARGS <<< "$CONTENT"
	ARGS=("${ARGS[@]//\"/\\\"}")

	COMMAND=${ARGS[0]}
	FUNC="MASH_COMMAND_$COMMAND"; FUNC="${!FUNC}"
	[ -z "$FUNC" ] && exit

	CTXSTR="MASH_COMMAND_${COMMAND}_CTX"; CTXSTR="${!CTXSTR}"
	CTX=$(echo "$1" | jq -r "$CTXSTR")

	export CTX
	"$FUNC" "${ARGS[@]:1}"
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
	echo "Usage: source commands" >&2
	echo "Helper functions for the lib"
	echo ""
	echo "This script needs to be sourced to work properly"
	echo "The avaliable functions are listed below"
	echo ""
	echo "prefix {PREFIX}"
	echo "    Sets the bot prefix variable"
	echo "    PREFIX: A string having one or more prefixes"
	echo ""
	echo "dispatch {EVENT} {FUNCTION}"
	echo "    Defines a event dispatch route"
	echo "    EVENT: The name of the event"
	echo "    FUNCTION: The name of the function"
	echo ""
	echo "xcommand {FUNC} {NAME} {CTX_STRING}"
	echo "    Defines a command"
	echo "    FUNC: The name of the function"
	echo "    NAME: A string having one or more names"
	echo "    CTX_STRING: A jq query for the CTX variable,"
	echo "        needs to return values separated by lines"
	echo "        an example would be '.channel_id,.id'"
else
	dispatch MESSAGE_CREATE _parse-commands
fi
