#!/bin/sh
. utils.sh
. websocket.sh

get_value(){
    value="$1"; value="${value#*\"$2\":}"
    value="${value%,*}"; value="${value%\}*}"
    value="${value#[[:space:]]}"; value="${value%[[:space:]]}"
    printf '%s\n' "$value"
}

payload="$(cat "$1")"; rm -f "$1"
printf '%s\n' "$payload" | tee "listener/"* >> /dev/null

case "$(get_value "$payload" op)" in
0)
    etype="$(get_value "$payload" t)"
    etype="${etype#?}"; etype="${etype%?}"
    seq="$(get_value "$payload" s)"
    
    data="${payload#*\{}"; data="${data#*\{}"
    data="${data%\}*}"; data="${data%\}*}"

    [ "$etype" = 'READY' ] && (printf '%s\n' "$data" \
                               | jq -r '.session_id' > "stat/session")
    [ "$seq" != 'null' ] && (printf '%s\n' "$seq" > "stat/seq")
    printf '%s\n' "$data" | "handler/$etype" 1>>/dev/null 2>> "log" ;;
7)
    ws_kill ;;
9)
    rm -f "stat/session" && ws_kill ;;
10)
    token="$(cat "config/token")"
    if [ -f "stat/session" ]; then
        session_id="$(cat "stat/session")"
        seq="$(cat "stat/seq" 2> /dev/null)"; seq="${seq:-0}"
        set_args token session_id seq::@ | ws_send 6
    else
        os="unix"; browser="mash"; device="mash"
        properties="$(set_args '$os:os' '$browser:browser' \
                               '$device:device')"
        shard="[$(cat "config/shard_no"), $(cat "config/shard_count")]"
        gs="$(cat "config/guild_subscriptions")"
        set_args token properties::@ shard::@ guild_subscriptions:gs:@ \
        | ws_send 2
    fi

    ack_timeout=5
    interval=$(printf '%s\n' "$payload" | jq -r '.d|.heartbeat_interval')
    interval="$(awk "BEGIN { print ($interval / 1000) - $ack_timeout }")"

    while true; do
        seq="$(cat "stat/seq" 2> /dev/null)"; seq="${seq:-0}"
        printf '%s\n' "$seq" | ws_send 1
        if [ -z "$(ewait '.op=11' "$ack_timeout")" ]; then
            ws_kill
            break
        fi
        sleep "$interval"
    done ;;
esac
