#!/bin/sh

if [ -z "$2" ]; then
    cat ../usage/dapi >&2
    exit 1
fi

[ "${MASH_AUTH_BOT:-1}" != '0' ] && BOT='Bot '
[ -z "$MASH_STATUS_DIR" ] && MASH_STATUS_DIR='.mash_tmp'

ROUTE=$(printf '%s\n' "$2" | cut -d'/' -f-3 | tr '/' '_')
LIMITF="$MASH_STATUS_DIR/lock/$ROUTE"
LIMITG="$MASH_STATUS_DIR/lock/global"
HEADERS=$(mktemp)
MASH_HTTP_USERAGENT="DiscordBot (https://github.com/Naranbataar/MaSH/ 1.3)"

exec 4>"$LIMITF"
flock -s 4
exec 5>"$LIMITG"
flock -s 5

read -r TEXT
if [ "$1" = '@FILES' ]; then
    N=0
    FILES="$(printf '%s\n' "$3" \
             | jq '.[]' \
             | while read -r f; do
                   printf "-F 'file%s=@%s' " "$N" "$f"
                   N=$(( N+1 ))
               done)"
    RESULT="$(curl -s -X "POST" -D "$HEADERS" \
              -A "$MASH_HTTP_USERAGENT" \
              -H "Authorization: $BOT$MASH_AUTH_TOKEN" \
              -F "payload_json=$TEXT" \
              $FILES "https://discordapp.com/api$2")"
else
    [ "$TEXT" != ' ' ] && D='-d @-'
    RESULT="$(printf '%s\n' "$TEXT" \
              | curl -s -X "$1" -D "$HEADERS" \
                -A "$MASH_HTTP_USERAGENT" \
                -H "Authorization: $BOT$MASH_AUTH_TOKEN" \
                -H "Content-Type: application/json" \
                "https://discordapp.com/api$2" $D)"
fi

HEADERS=$(cat "$HEADERS")
CODE="$(printf '%s\n' "$HEADERS" | head -n 1)"
if [ "${CODE#*429}" != "$CODE" ]; then
    RETRY=$(printf '%s\n' "$(printf '%s\n' "$RESULT" \
                             | jq -r '.retry_after') / 1000" \
                             | bc -l)
    GLOBAL=$(printf '%s\n' "$RESULT" | jq -r '.global')
    if [ "$GLOBAL" = "true" ]; then
        flock 5
        touch "$LIMITG"
        sleep "$RETRY"
        rm -f "$LIMITG"
        flock -u 5
    else
        flock 4
        sleep "$RETRY"
        flock -u 4
    fi
    $0 "$@"
    exit
else
    printf '%s\n' "$RESULT"
fi

REMAINING="$(printf '%s\n' "$HEADERS" | grep -i "x-ratelimit-remaining" \
             sed 's/[^0-9]*//g')"
if [ -n "$REMAINING" ]; then
    if [ "$REMAINING" -lt 1 ]; then
        flock 4
        RESET="$(printf '%s\n' "$HEADERS" | grep -i "x-ratelimit-reset" \
                 sed 's/[^0-9]*//g')"
        sleep "$(( (RESET - $(date '+%s')) ))"
        flock -u 4
    fi
fi
