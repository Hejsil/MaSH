#!/bin/sh

home(){
    printf '%s\n' "${MASH_HOME:-.mash}"
}

proc_kill(){
    if [ ! "$#" -eq 1 ]; then
        printf '%s\n' 'usage: mash_tools proc_kill NAME' >&2
        printf '%s\n' 'Kills a MaSH process and its subprocess by name' >&2
        return 1
    fi

    ret=0
    for proc in "$(home)/proc/"$1; do
        if [ ! -f "$proc" ]; then
            printf 'mash_tools: %s: No such process\n' "$1" >&2
            ret=1
            continue
        fi

        pid="$(cat "$proc")"
        pkill -P "$pid" 2> /dev/null
        kill "$pid" 2> /dev/null
        rm -f "$proc"
    done

    return "$ret"
}

new_broker(){
    if [ ! "$#" -eq 0 ]; then
        printf '%s\n' 'usage: mash_tools new_broker' >&2
        printf '%s\n' 'Creates an updated broker, and kills the old one' >&2
        return 1
    fi

    proc="$(home)/proc/broker"
    pipe="$(home)/ipc/sockout"
    folder="$(home)/listeners"

    [ -d "$folder" ] || mkdir "$folder"
    [ -L "$folder/null" ] || ln -s /dev/null "$folder/null"
    [ -f "$proc" ] && proc_kill broker

    while [ ! -p "$pipe" ]; do
        sleep 1
    done

    tee "$folder/"* < "$pipe" >> /dev/null &
    printf '%s\n' "$!" > "$proc"
}

# shellcheck disable=SC2064
listener(){
    if [ ! "$#" -eq 1 ]; then
        printf '%s\n' 'usage: mash_tools listener NAME' >&2
        printf '%s\n' 'Listens to the active broker' >&2
        return 1
    fi

    pipe="$(home)/listeners/$1"
    cleanup="(rm \"$pipe\" && \"$0\" new_broker) 2>/dev/null; exit"
    if mkfifo "$pipe"; then
        trap "$cleanup" INT TERM EXIT
        "$0" new_broker
        while [ -p "$pipe" ]; do
            cat "$pipe" 2>/dev/null || break
        done
    fi
}

opt="$1"; shift
case "$opt" in
    home|proc_kill|new_broker|listener) "$opt" "$@" ;;
    *)
        printf '%s\n' 'usage: mash_tools TOOL' >&2
        printf '%s\n' 'Important utilities' >&2
        printf '\n'
        printf '%s\n' 'Avaliable tools:' >&2
        printf '%s\n' 'home          Returns MaSH home directory' >&2
        printf '%s\n' 'proc_kill     Kills process by name' >&2
        printf '%s\n' 'new_broker    Replaces the old broker' >&2
        printf '%s\n' 'listener      Listens to the broker' >&2
        exit 1 ;;
esac
