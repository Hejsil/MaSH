#!/bin/bash

case $1 in
'get'|'new'|'edit'|'del'|'embed_get'|'embed_edit'|'audit_log'|'vanity_url'|'widget')
	read -r TEXT
	GUILD=$(echo "$TEXT" | jq -r '.id')
	case $1 in
	'get')
		echo " " | dapi GET "/guilds/$GUILD" ;;
	'new')
		PAYLOAD=$(echo "$TEXT" | filter-args json 'name,region,icon,verification_level,default_message_notifications,explicit_content_filter,roles,channels')
		echo "$PAYLOAD" | dapi POST "/guilds" ;;
	'edit')
		PAYLOAD=$(echo "$TEXT" | filter-args json 'name,region,verification_level,default_message_notifications,explicit_content_filter,afk_channel_id,afk_timeout,icon,owner_id,splash,system_channel_id')
		echo "$PAYLOAD" | dapi PATCH "/guilds/$GUILD" ;;
	'del')
		echo " " | dapi DELETE "/guilds/$GUILD" ;;
	'embed_get')
		echo " " | dapi GET "/guilds/$GUILD/embed" ;;
	'embed_edit')
		PAYLOAD=$(echo "$TEXT" | filter-args json 'enabled,channel_id')
		echo "$PAYLOAD" | dapi PATCH "/guilds/$GUILD/embed" ;;
	'audit_log')
		QUERY=$(echo "$TEXT" | filter-args query 'user_id,action_type,before,limit')
		echo " " | dapi GET "/guilds/$GUILD/audit-logs$QUERY" ;;
	'vanity_url')
		echo " " | dapi GET "/guilds/$GUILD/vanity-url" ;;
	'widget')
		QUERY=$(echo "$TEXT" | filter-args query 'style')
		echo " " | dapi GET "/guilds/$GUILD/widget.png$QUERY" ;;
	esac ;;
*)
	echo "Usage: guild {COMMAND}" >&2
	echo "Interacts with guild endpoints"
	echo ""
	echo "Every command accept a string of JSON on STDIN"
       	echo "Avaliable commands with their respective JSON keys"
	echo ""
	echo "get: {id}"
	echo "    id: (snowflake) the id of the guild"
	echo ""
	echo "new: [name] [region] [icon] [verification_level] "
	echo "[default_message_notifications] [explicit_content_filter]"	
	echo "[roles] [channels]"
	echo "    name: (string) name of the guild (2-100)"
	echo "    region: (string) voice region id"
	echo "    icon: (uri image) 128x128 jpeg image for the icon"
	echo "    verification_level: (integer) verification level"
	echo "    default_message_notifications: (integer) default "
	echo "        message notification level"
	echo "    explicit_content_filter: (integer) explicit content "
	echo "        filter level"
	echo "    roles: (array) new guild (partial) roles"
	echo "    channels: (array) new guild's (partial) channels"
	echo ""
	echo "edit: {id} [name] [region] [verification_level] "
	echo "[default_message_notifications] [explicit_content_filter]"	
	echo "[roles] [channels]"
	echo "    id: (snowflake) the id of the guild"
	echo "    name: (string) name of the guild (2-100)"
	echo "    region: (string) voice region id"
	echo "    icon: (uri image) 128x128 jpeg image for the icon"
	echo "    verification_level: (integer) verification level"
	echo "    default_message_notifications: (integer) default "
	echo "        message notification level"
	echo "    explicit_content_filter: (integer) explicit content "
	echo "        filter level"
	echo "    afk_channel_id: (snowflake) id for afk channel"
	echo "    afk_timeout: (integer) afk timeout in seconds"
	echo "    icon: (uri image) 128x128 jpeg image for the icon"
	echo "    owner_id: (snowflake) user to transfer guild ownership to"
	echo "    splash: (uri image) 128x128 jpeg image for the guild splash"
	echo "    system_channel_id: (snowflake) the id of the channel to which"
	echo "        system messages are sent"
	echo ""
	echo "del: {id}"
	echo "    id: (snowflake) the id of the guild"
	echo ""
	echo "embed_get: {id}"
	echo "    id: (snowflake) the id of the guild"
	echo ""
	echo "embed_edit: {id} [enabled] [channel_id]"
	echo "    id: (snowflake) the id of the guild"
	echo "    enabled: (snowflake) whether the embed is enabled"
	echo "    channel_id: (snowflake) the embed channel id"
	echo ""
	echo "audit_log: {id} [user_id] [action_type] [before] [limit]"
	echo "    id: (snowflake) the id of the guild"
	echo "    user_id: (snowflake) filter for actions made by a user"
	echo "    action_type: (integer) the type of event"
	echo "    before: (snowflake) filter the log before a certain id"
	echo "    limit: (integer) how many entries are returned (1-100)"
	echo ""
	echo "vanity_url: {id}"
	echo "    id: (snowflake) the id of the guild"
	echo ""
	echo "widget: {id}"
	echo "    id: (snowflake) the id of the guild"
	echo "    style: (string) the style of the widget"
	exit 1 ;;
esac
