#!/bin/bash

case $1 in
'type'|'get'|'send'|'edit'|'delete'|'pin'|'unpin'|'pins'|'bulk_get'|'bulk_delete')
	read -r TEXT
	CHANNEL=$(echo "$TEXT" | jq -r '.channel')
	case $1 in
	'type')
		echo "{}" | dapi POST "/channels/$CHANNEL/typing" ;;
	'get')
		MSG=$(echo "$TEXT" | jq -r '.id')
		echo "{}" | dapi GET "/channels/$CHANNEL/messages/$MSG" ;;
	'send')
		FILES=$(echo "$TEXT" | jq -cM '.files//empty')
		PAYLOAD=$(echo "$TEXT" | filter-args json 'content,embed,nonce,tts')
		if [[ -z $FILES ]]; then
			echo "$PAYLOAD" | dapi POST "/channels/$CHANNEL/messages"
		else
			echo "$PAYLOAD" | dapi @FILES "/channels/$CHANNEL/messages" "$FILES"
		fi ;;
	'edit')
		MSG=$(echo "$TEXT" | jq -r ".id")
		PAYLOAD=$(echo "$TEXT" | filter-args json 'content,embed')
		echo "$PAYLOAD" | dapi PATCH "/channels/$CHANNEL/messages/$MSG" ;;
	'delete')
		MSG=$(echo "$TEXT" | jq -r ".id")
		echo "{}" | dapi DELETE "/channels/$CHANNEL/messages/$MSG" ;;
	'pin')
		MSG=$(echo "$TEXT" | jq -r ".id")
		echo "{}" | dapi PUT "/channels/$CHANNEL/pins/$MSG" ;;
	'unpin')
		MSG=$(echo "$TEXT" | jq -r ".id")
		echo "{}" | dapi DELETE "/channels/$CHANNEL/pins/$MSG" ;;
	'pins')
		echo "{}" | dapi GET "/channels/$CHANNEL/pins" ;;
	'bulk_get')
		QUERY=$(echo "$TEXT" | filter-args query 'before,after,around,limit')
		echo " " | dapi GET "/channels/$CHANNEL/messages$QUERY" ;;
	'bulk_delete')
		PAYLOAD=$(echo "$TEXT" | filter-args json 'messages')
		echo "$PAYLOAD" | dapi POST "/channels/$CHANNEL/messages/bulk-delete" ;;
	esac ;;
*)
	echo "Usage: message {COMMAND}" >&2
	echo "Interacts with message endpoints"
	echo ""
	echo "Every command accept a string of JSON on STDIN"
       	echo "Avaliable commands with their respective JSON keys:"
	echo ""
	echo "type: {channel}"
	echo "    channel: (snowflake) the target channel"
	echo ""
	echo "get: {id} {channel}"
	echo "    id: (snowflake) the id of the message"
	echo "    channel: (snowflake) the target channel"
	echo ""
	echo "send: {channel} {content|embed|files} [nonce] [tts]"
	echo "    channel: (snowflake) the target channel"
	echo "    content: (string) the text of the message (0-2000)"
	echo "    embed: (embed object)  the embed of the message"
	echo "    files: (array) an array of paths, the files to be uploaded"
	echo "    nonce: (snowflake) the nonce of the message"
	echo "    tts: (boolean) whether the message is TTS or now"
	echo ""
	echo "edit: {id} {channel} [content] [embed]"
	echo "    id: (snowflake) the id of the message"
	echo "    channel: (snowflake) the target channel"
	echo "    content: (string) the new text of the message (0-2000)"
	echo "    embed: (embed object) the new embed of the message"
	echo ""
	echo "delete: {id} {channel}"
	echo "    id: (snowflake) the id of the message"
	echo "    channel: (snowflake) the target channel"
	echo ""
	echo "pin: {id} {channel}"
	echo "    id: (snowflake) the id of the message"
	echo "    channel: (snowflake) the target channel"
	echo ""
	echo "unpin: {id} {channel}"
	echo "    id: (snowflake) the id of the message"
	echo "    channel: (snowflake) the target channel"
	echo ""
	echo "pins: {channel}"
	echo "    channel: (snowflake) the target channel"
	echo ""
	echo "bulk_get: {channel} [around|before|after] [limit]"
	echo "    channel: (snowflake) the target channel"
	echo "    around: (snowflake) get messages around this message id"
	echo "    before: (snowflake) get messages before this message id"
	echo "    after: (snowflake) get messages after this message id"
	echo "    limit: (integer)  max number of messages to return (1-100)"
	echo ""
	echo "bulk_delete: {channel} {messages}"
	echo "    channel: (snowflake) the target channel"
	echo "    messages: (array) an array of the message ids"
	exit 1 ;;
esac
