#!/bin/bash

case $1 in
'exec'|'get'|'edit'|'del'|'list_ch'|'list_g')
	read -r TEXT
	COMMON=$(echo "$1"| jq -r '.id,.token')
	mapfile -t COMMON <<< "$context"

	ID=${context[0]}; TOKEN=${context[1]}
	[ -n "$TOKEN" ] && TOKEN="/$TOKEN"
	case $1 in
	'exec')
		FILES=$(echo "$TEXT" | jq -cM '.files//empty')
		PAYLOAD=$(echo "$TEXT" | filter-args json 'content,embeds,files,username,avatar_url,tts')
		if [[ -z $FILES ]]; then
			echo "$PAYLOAD" | dapi POST "/webhooks/$ID$TOKEN" "{}"
		else
			echo "$PAYLOAD" | dapi @FILES "/webhooks/$ID$TOKEN" "$FILES"
		fi ;;
	'get')
		dapi GET "/webhooks/$ID$TOKEN" "{}" ;;
	'edit')
		dapi PATCH "/webhooks/$ID$TOKEN" "{}" ;;
	'del')
		dapi DELETE "/webhooks/$ID$TOKEN" "{}" ;;
	'list_ch')
		dapi GET "/channels/$ID/webhooks" "{}" ;;
	'list_g')
		dapi GET "/guilds/$ID/webhooks" "{}" ;;
	esac ;;
*)
	echo "Usage: webhook {COMMAND}" >&2
	echo "Interacts with webhook endpoints"
	echo ""
	echo "Every command accept a string of JSON on STDIN"
       	echo "Avaliable commands with their respective JSON keys:"
	echo ""
	echo "exec: {id} {token} [*content] [*embeds] [*files] [username] "
	echo "    [avatar_url] [tts]"
	echo "    id: (snowflake) the id of the webhook"
	echo "    token: (string) the token of the webhook"
	echo "    content: (string) the message contents (<2000)"
	echo "    embeds: (array) an array of embed objects"
	echo "    files: (array) an array of paths, the files to be uploaded"
	echo "    username: (string) default name override"
	echo "    avatar_url: (string) default avatar override"
	echo "    tts: (boolean) if this is a TTS message"
	echo ""
	echo "get: {id} [token]"
	echo "    id: (snowflake) the id of the webhook"
	echo "    token: (string) the token of the webhook"
	echo ""
	echo "edit: {id} [token] [name] [avatar] [channel_id]"
	echo "    id: (snowflake) the id of the webhook"
	echo "    token: (string) the token of the webhook"
	echo "    name: (string) the default name of the webhook"
	echo "    avatar: (uri image) default webhook avatar"
	echo "    channel_id: (snowflake) the new channel id"
        echo "        this webhook should be moved to"
	echo ""
	echo "del: {id} [token]"
	echo "    id: (snowflake) the id of the webhook"
	echo "    token: (string) the token of the webhook"
	echo ""
	echo "list_ch: {id}"
	echo "    id: (snowflake) the id of the channel"
	echo ""
	echo "list_g: {id}"
	echo "    id: (snowflake) the id of the guild"
	echo ""
	exit 1 ;;
esac
